---
openapi: 3.0.0
info:
  title: OGC API DGGS
  description: |-
    WARNING - This is work-in-progress.

    The API is an evolution of https://app.swaggerhub.com/apis/aaime-sh/dggs-process/0.0.3#/DGGS%20access.

    Basic ideas:
    * The same API elements are used for a DGGS-RS service and a DGGS-Data service
    * In the case of a DGGS-RS service, the collections are the DGGS instances themselves,
      and the returned features have no properties other than the geometry and resolution
      (e.g., in GeoJSON the properties object will be ``null``)
    * In the case of a DGGS-Data service, the collections are the sample DGGS data (hence, made available in a particular DGGS instance, too), and the returned features have
      actual values associated in the ``properties`` object.

    To care for different use cases, three different output formats will be implemented
    for each endpoint returning cells:
    * A classic GeoJSON output, with geometry being either the boundary or the center
      point of the zone (to be controlled with a request parameter), for usage in classic
      GIS tools. The longitudes ill eventually be extended outside of the -180,180
      range to allow visualization by tools that cannot deal properly with dateline crossing.
    * A DGGSJSON output, small variation of the classic GeoJSON where the geometry is
      replaced by an array of zone-ids, to be used in both zone oriented and feature oriented
      API (e.g., the)
    * A plain array of DGGS zone ids, for cases where the attributes are not needed and data transfer compactness is paramount.

    Questions, discussion topics:
    * Support for multiple DDGSs, we are using rHealPix and H3, to offer the
      clients and DGGS data server at least a DGGS they are not already supporting natively
    * Is the API going to be sufficiently self describing that the clients
      can figure out everything it needs by just walking the API, or will it need specific knowledge contained in an API profile (e.g, a profile for rHeadlPix, one for H3, cosider for example zoneId and how to determine them)
    * For parametric DDGSs (e.g., rHealPix) do we expose a specific instance as its own DGGS, or somehow expose the full parameters of the DGGS in each resource?
    * This API follows a process API, where most resources are a process and one needs to know valid values to hit them


    CHANGES
    * 2020-07-02 initial version
    * 2020-07-23 usage of zones instead of cells everywhere, extending to support also data DGGS servers.
    * 2021-06-15 addition of definitions for ZoneQuery operations - Robert Gibb
    * 2021-10-18 Refactoring and retitling to incorporate outcomes from OGC API DGGS related implementation projects conducted during 2020 and 2021 - Matthew Purss
    * 2021-10-25 Download of 'YAML Resolved' copy of 0.0.6 from https://app.swaggerhub.com/apis/geofizzydrink/ogc_api_dggs/0.0.6
  contact:
    name: Matthew Purss
    email: mpurss@pangaeainnovations.com
  license:
    name: OGC License
    url: http://www.opengeospatial.org/legal/
  x-logo:
    url: 'https://www.ogc.org/pub/www/files/OGC_Logo_2D_Blue_x_0_0.png'
  version: 0.0.6-redoc.1
tags:
- name: OGC API Common
  description: essential characteristics of this API
- name: DGGS Core
  description: DGGS Core Definition Resources
- name: DGGS ZoneQuery Operations
  description: Generatl DGGS ZoneQuery operations
- name: DGGS ZoneQuery Operations - Set Functions
  description: DGGS ZoneQuery operations applied to a set of zones
- name: DGGS ZoneQuery Operations - Query Functions
  description: DGGS ZoneQuery operations applied between two individual zones
- name: DGGS ZoneQuery Operations - Reference Functions
  description: DGGS ZoneQuery operations applied to a reference between zones
- name: Collection ZoneQuery Operations
  description: Generatl DGGS ZoneQuery operations applied to a DGGS Enabled Collection
- name: Collection ZoneQuery Operations - Set Functions
  description: DGGS ZoneQuery operations applied to a set of zones within a DGGS Enabled Collection
- name: Collection ZoneQuery Operations - Query Functions
  description: DGGS ZoneQuery operations applied between two individual zones within a DGGS Enabled Collection
- name: Collection ZoneQuery Operations - Reference Functions
  description: DGGS ZoneQuery operations applied to a reference between zones within a DGGS Enabled Collection
paths:
  /:
    get:
      tags:
      - OGC API Common
      summary: landing page
      description: The landing page provides links to the API definition, the conformance statements and to the feature collections in this dataset.
      parameters:
      - name: f
        in: query
        description: The optional f parameter indicates the output format which the server shall provide as part of the response document.  The default format is JSON.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: json
          enum:
          - json
          - html
      responses:
        "200":
          description: Links to the API capabilities and the Resources shared by this API.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/landingPage'
            text/html:
              schema:
                type: string
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /api:
    get:
      tags:
      - OGC API Common
      summary: This Document
      description: This Document
      parameters:
      - name: f
        in: query
        description: The optional f parameter indicates the output format which the server shall provide as part of the response document.  The default format is JSON.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: json
          enum:
          - json
          - html
      responses:
        "200":
          description: This document in JSON format
          content:
            application/json:
              schema:
                type: string
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /conformance:
    get:
      tags:
      - OGC API Common
      description: |-
        A list of all requirements classes specified in a standard that the
        server conforms to.
      parameters:
      - name: f
        in: query
        description: The optional f parameter indicates the output format which the server shall provide as part of the response document.  The default format is JSON.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: json
          enum:
          - json
          - html
      responses:
        "200":
          description: the URIs of all requirements classes supported by this API
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/confClasses'
              example:
                conformsTo:
                - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/core
                - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/json
                - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/html
                - http://www.opengis.net/spec/ogcapi-common-1/1.0/conf/oas30
                - http://www.opengis.net/spec/ogcapi-common-2/1.0/conf/collections
                - http://www.opengis.net/spec/ogcapi-features-1/1.1/conf/geojson
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
            text/html:
              schema:
                type: string
  /collections:
    get:
      tags:
      - OGC API Common
      summary: the collections in a dataset shared from this server
      description: A list of all collections available in this dataset.
      parameters:
      - name: f
        in: query
        description: The optional f parameter indicates the output format which the server shall provide as part of the response document.  The default format is JSON.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: json
          enum:
          - json
          - html
      responses:
        "200":
          description: |-
            The collections (geospatial data resources) shared by this API.
            This response can be references directly for every service that wants only essential information at the collections level. /collections/collectionId might return more information.
            The dataset is organized as one or more collections. This resource provides information about and how to access the collections.
            The response contains the list of collections. For each collection, a link
            to other resources present (e.g. the items in the collection, path `/collections/{collectionId}/items`,
            link relation `items`, a map created with data from  collection, path `/collections/{collectionId}/map`,
            link relation `map`) as well as key information about the collection.
            This information includes, but is not limited to:
            * A local identifier for the collection that is unique for the dataset;
            * A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS84 with axis order longitude/latitude);
            * An optional title and description for the collection;
            * An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collections'
            text/html:
              schema:
                type: string
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
            text/html:
              schema:
                type: string
  /collections/{collectionId}:
    get:
      tags:
      - OGC API Common
      summary: describe a collection
      operationId: describeCollection
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: f
        in: query
        description: |-
          The format of the response. If no value is provided, the standard http
          rules apply, i.e., the accept header is used to determine the format.
          Pre-defined values are "json" and "html". The response to other
          values is determined by the server.
        required: false
        style: form
        explode: false
        schema:
          type: string
          enum:
          - application/json
          - text/html
        example: application/json
      responses:
        "200":
          description: Metadata about the collection including style information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collections'
            text/html:
              schema:
                type: string
        "404":
          description: The requested URI was not found
        "500":
          description: A server error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
  /dggs:
    get:
      tags:
      - DGGS Core
      summary: List of DGGS Resource Instances
      parameters:
      - name: f
        in: query
        description: The optional f parameter indicates the output format which the server shall provide as part of the response document.  The default format is JSON.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: json
          enum:
          - json
          - html
      responses:
        "200":
          description: Lists all Server-side DGGS instances implemented by this OGC API Server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dggs-list'
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}:
    get:
      tags:
      - DGGS Core
      summary: Structural definition and links to OGC API Resources implemented on this server for the selected DGGS Reference System.
      parameters:
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: f
        in: query
        description: The optional f parameter indicates the output format which the server shall provide as part of the response document.  The default format is JSON.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: json
          enum:
          - json
          - html
      - name: geometryStats
        in: query
        description: get full DGGS_RS class statistics e.g. [min,max,mean,median,sd]
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
        example: min,max,median
      responses:
        "200":
          description: Structural definition and links to OGC API Resources implemented on this server for the selected DGGS.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dggsRsParameters'
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zones:
    get:
      tags:
      - DGGS Core
      summary: Access the list of zones in a given DGGS. Can list either all the zones, or a particular subset based on resolution, WGS84 bbox, or list of containing zones (e.g., polygon defined in DGGS terms)
      parameters:
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: f
        in: query
        description: The optional f parameter indicates the output format which the server shall provide as part of the response document.  The default format is JSON.
        required: false
        style: form
        explode: true
        schema:
          type: string
          example: json
          enum:
          - json
          - html
      - name: bbox
        in: query
        description: |-
          Only features that have a geometry that intersects the bounding box are selected.
              The bounding box is provided as four or six numbers, depending on
          whether the
              coordinate reference system includes a vertical axis (height or depth):

          * Lower left corner, coordinate axis 1
              * Lower left corner, coordinate axis 2
              * Minimum value, coordinate axis 3 (optional)
              * Upper right corner, coordinate axis 1
              * Upper right corner, coordinate axis 2
              * Maximum value, coordinate axis 3 (optional)

          The coordinate reference system of the values is WGS 84 longitude/latitude
              (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different
          coordinate
              reference system is specified in the parameter `bbox-crs`.

          For WGS 84 longitude/latitude the values are in most cases the sequence of
              minimum longitude, minimum latitude, maximum longitude and maximum
          latitude.
              However, in cases where the box spans the antimeridian the first value
              (west-most box edge) is larger than the third value (east-most box
          edge).
          If the vertical axis is included, the third and the sixth number are
              the bottom and the top of the 3-dimensional bounding box.

          If a feature has multiple spatial geometry properties, it is the decision of the
              server whether only a single spatial geometry property is used to
          determine
              the extent or all relevant geometries.
        required: false
        style: form
        explode: false
        schema:
          maxItems: 6
          minItems: 4
          type: array
          items:
            type: number
      - name: rangeRefine
        in: query
        description: Specifies the range of refinement levels to include in the return «set». The lower and upper bounds in the refinementLevelRange datatype are both included in the range.
        required: false
        style: form
        explode: false
        schema:
          maxItems: 2
          minItems: 2
          type: array
          items:
            type: integer
        example: rangeRefine=0,5
      - name: offset
        in: query
        description: |-
          The optional offset parameter specifies the number of items of a collection to skip before constructing the resultset to be returned in the response document.
          Minimum = 0, Maximum = 9999, Default = 10
        required: false
        style: form
        explode: true
        schema:
          maximum: 9999
          minimum: 0
          type: integer
          default: 10
      - name: limit
        in: query
        description: |-
          The optional limit parameter limits the number of items that are presented in the response document.
          Only items are counted that are on the first level of the collection in the response document.
              Nested objects contained within the explicitly requested items shall not
          be counted.
          Minimum = 1. Maximum = 10000. Default = 10.
        required: false
        style: form
        explode: true
        schema:
          maximum: 10000
          minimum: 1
          type: integer
          default: 10
      responses:
        "200":
          description: |-
            A list of DGGS zones.

            The response contains a list of DGGS zones. The response can be a GeoJSON payload with full boundaries, for traditional clients, or
            a simple list of zone ids, for DGGS aware clients
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionGeoJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
                - type: Feature
                  id: Q4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
            application/dggs+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionDGGSJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                  - P4
                - type: Feature
                  id: Q4
                  geometry:
                  - Q4
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
                - type: Feature
                  id: myFeature.1
                  geometry:
                  - Q4
                  - P4
                  - P32
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
            application/zoneids+json:
              schema:
                $ref: '#/components/schemas/zoneList'
              example:
              - zones:
                - O
                - P
                - Q
                - R
                links:
                - href: http://data.example.org/dggs/rHeadPix/zones?bbox=-20,-40,20,40&startIndex=1000
                  rel: next
                  type: application/json
                  title: the next page of
            text/html:
              schema:
                type: string
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}:
    get:
      tags:
      - DGGS Core
      summary: Access the definition of a particular zone
      parameters:
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: Q3
      responses:
        "200":
          description: |-
            A single DGGS zone

            The response contains the description of a single DGGS zone
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/zoneGeoJSON'
              example:
                type: Feature
                id: P4
                geometry:
                  type: Polygon
                  coordinates:
                  - '...'
                resolution: 0
                properties:
                  att1: value1
                  att2: value2
            application/dggs+json:
              schema:
                $ref: '#/components/schemas/DGGSJSON'
              example:
                type: Feature
                id: P4
                geometry:
                - P4
                properties:
                  att1: value1
                  att2: value2
            text/html:
              schema:
                type: string
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}/distance:
    get:
      tags:
      - DGGS ZoneQuery Operations
      summary: Test if the current ZoneId is withinDistance another ZonalID
      parameters:
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: |-
            The Distance of one ZoneId to another in a projectTo dimension

            The response contains a spatial and a temporal distance with their respective uom.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distance'
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /collections/{collectionId}/dggs/{dggsRSID}/zone/{ZonalID}/distance:
    get:
      tags:
      - Collection ZoneQuery Operations
      summary: Test if the current ZoneId is withinDistance another ZonalID within a Collection
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: |-
            The Distance of one ZoneId to another in a projectTo dimension

            The response contains a spatial and a temporal distance with their respective uom.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distance'
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}/buffer:
    get:
      tags:
      - DGGS ZoneQuery Operations - Set Functions
      summary: Get the list of zonalId that are within a buffer of dist from the given zoneId
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: Q3
      - name: dist
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/distance'
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: |-
            A list of DGGS zones.

            The response contains a list of DGGS zones. The response can be a GeoJSON payload with full boundaries, for traditional clients, or
            a simple list of zone ids, for DGGS aware clients
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionGeoJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
                - type: Feature
                  id: Q4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
            application/dggs+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionDGGSJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                  - P4
                - type: Feature
                  id: Q4
                  geometry:
                  - Q4
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
                - type: Feature
                  id: myFeature.1
                  geometry:
                  - Q4
                  - P4
                  - P32
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
            application/zoneids+json:
              schema:
                $ref: '#/components/schemas/zoneList'
              example:
              - zones:
                - O
                - P
                - Q
                - R
                links:
                - href: http://data.example.org/dggs/rHeadPix/zones?bbox=-20,-40,20,40&startIndex=1000
                  rel: next
                  type: application/json
                  title: the next page of
            text/html:
              schema:
                type: string
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}/difference:
    get:
      tags:
      - DGGS ZoneQuery Operations - Set Functions
      summary: Get the list of zonalID that are the result of zoneId.difference(another)
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: rangeRefine
        in: query
        description: Specifies the range of refinement levels to include in the return «set». The lower and upper bounds in the refinementLevelRange datatype are both included in the range.
        required: false
        style: form
        explode: false
        schema:
          maxItems: 2
          minItems: 2
          type: array
          items:
            type: integer
        example: rangeRefine=0,5
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: |-
            A list of DGGS zones.

            The response contains a list of DGGS zones. The response can be a GeoJSON payload with full boundaries, for traditional clients, or
            a simple list of zone ids, for DGGS aware clients
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionGeoJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
                - type: Feature
                  id: Q4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
            application/dggs+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionDGGSJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                  - P4
                - type: Feature
                  id: Q4
                  geometry:
                  - Q4
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
                - type: Feature
                  id: myFeature.1
                  geometry:
                  - Q4
                  - P4
                  - P32
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
            application/zoneids+json:
              schema:
                $ref: '#/components/schemas/zoneList'
              example:
              - zones:
                - O
                - P
                - Q
                - R
                links:
                - href: http://data.example.org/dggs/rHeadPix/zones?bbox=-20,-40,20,40&startIndex=1000
                  rel: next
                  type: application/json
                  title: the next page of
            text/html:
              schema:
                type: string
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}/intersection:
    get:
      tags:
      - DGGS ZoneQuery Operations - Set Functions
      summary: Get the list of zonalID that are the result of zoneId.intersection(another)
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: rangeRefine
        in: query
        description: Specifies the range of refinement levels to include in the return «set». The lower and upper bounds in the refinementLevelRange datatype are both included in the range.
        required: false
        style: form
        explode: false
        schema:
          maxItems: 2
          minItems: 2
          type: array
          items:
            type: integer
        example: rangeRefine=0,5
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: |-
            A list of DGGS zones.

            The response contains a list of DGGS zones. The response can be a GeoJSON payload with full boundaries, for traditional clients, or
            a simple list of zone ids, for DGGS aware clients
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionGeoJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
                - type: Feature
                  id: Q4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
            application/dggs+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionDGGSJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                  - P4
                - type: Feature
                  id: Q4
                  geometry:
                  - Q4
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
                - type: Feature
                  id: myFeature.1
                  geometry:
                  - Q4
                  - P4
                  - P32
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
            application/zoneids+json:
              schema:
                $ref: '#/components/schemas/zoneList'
              example:
              - zones:
                - O
                - P
                - Q
                - R
                links:
                - href: http://data.example.org/dggs/rHeadPix/zones?bbox=-20,-40,20,40&startIndex=1000
                  rel: next
                  type: application/json
                  title: the next page of
            text/html:
              schema:
                type: string
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}/symDifference:
    get:
      tags:
      - DGGS ZoneQuery Operations - Set Functions
      summary: Get the list of zonalID that are the result of zoneId.symDifference(another)
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: rangeRefine
        in: query
        description: Specifies the range of refinement levels to include in the return «set». The lower and upper bounds in the refinementLevelRange datatype are both included in the range.
        required: false
        style: form
        explode: false
        schema:
          maxItems: 2
          minItems: 2
          type: array
          items:
            type: integer
        example: rangeRefine=0,5
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: |-
            A list of DGGS zones.

            The response contains a list of DGGS zones. The response can be a GeoJSON payload with full boundaries, for traditional clients, or
            a simple list of zone ids, for DGGS aware clients
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionGeoJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
                - type: Feature
                  id: Q4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
            application/dggs+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionDGGSJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                  - P4
                - type: Feature
                  id: Q4
                  geometry:
                  - Q4
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
                - type: Feature
                  id: myFeature.1
                  geometry:
                  - Q4
                  - P4
                  - P32
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
            application/zoneids+json:
              schema:
                $ref: '#/components/schemas/zoneList'
              example:
              - zones:
                - O
                - P
                - Q
                - R
                links:
                - href: http://data.example.org/dggs/rHeadPix/zones?bbox=-20,-40,20,40&startIndex=1000
                  rel: next
                  type: application/json
                  title: the next page of
            text/html:
              schema:
                type: string
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}/union:
    get:
      tags:
      - DGGS ZoneQuery Operations - Set Functions
      summary: Get the list of zonalID that are the result of zoneId.union(another)
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: rangeRefine
        in: query
        description: Specifies the range of refinement levels to include in the return «set». The lower and upper bounds in the refinementLevelRange datatype are both included in the range.
        required: false
        style: form
        explode: false
        schema:
          maxItems: 2
          minItems: 2
          type: array
          items:
            type: integer
        example: rangeRefine=0,5
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: |-
            A list of DGGS zones.

            The response contains a list of DGGS zones. The response can be a GeoJSON payload with full boundaries, for traditional clients, or
            a simple list of zone ids, for DGGS aware clients
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionGeoJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
                - type: Feature
                  id: Q4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
            application/dggs+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionDGGSJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                  - P4
                - type: Feature
                  id: Q4
                  geometry:
                  - Q4
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
                - type: Feature
                  id: myFeature.1
                  geometry:
                  - Q4
                  - P4
                  - P32
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
            application/zoneids+json:
              schema:
                $ref: '#/components/schemas/zoneList'
              example:
              - zones:
                - O
                - P
                - Q
                - R
                links:
                - href: http://data.example.org/dggs/rHeadPix/zones?bbox=-20,-40,20,40&startIndex=1000
                  rel: next
                  type: application/json
                  title: the next page of
            text/html:
              schema:
                type: string
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}/child:
    get:
      tags:
      - DGGS ZoneQuery Operations - Set Functions
      summary: Get the list of zones children of a given zone
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: Q3
      - name: inheritId
        in: query
        description: type Boolean, optional, default ⇐ False When inheritID has a value of True the result «set» only contains cells for which the IDs have shared inheritance, and a value of False indicates that inheritance is ignored.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: levels
        in: query
        description: type Integer, optional, default ⇐ 1 Levels indicates the relative number of levels in the hierarchy to be traversed in assembling the result «set» Figure 15 illustrates the parent, child and sibling suite of functions through examples.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 1
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: |-
            A list of DGGS zones.

            The response contains a list of DGGS zones. The response can be a GeoJSON payload with full boundaries, for traditional clients, or
            a simple list of zone ids, for DGGS aware clients
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionGeoJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
                - type: Feature
                  id: Q4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
            application/dggs+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionDGGSJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                  - P4
                - type: Feature
                  id: Q4
                  geometry:
                  - Q4
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
                - type: Feature
                  id: myFeature.1
                  geometry:
                  - Q4
                  - P4
                  - P32
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
            application/zoneids+json:
              schema:
                $ref: '#/components/schemas/zoneList'
              example:
              - zones:
                - O
                - P
                - Q
                - R
                links:
                - href: http://data.example.org/dggs/rHeadPix/zones?bbox=-20,-40,20,40&startIndex=1000
                  rel: next
                  type: application/json
                  title: the next page of
            text/html:
              schema:
                type: string
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}/parent:
    get:
      tags:
      - DGGS ZoneQuery Operations - Set Functions
      summary: Get the list of zones parents of a given zone
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: Q3
      - name: inheritId
        in: query
        description: type Boolean, optional, default ⇐ False When inheritID has a value of True the result «set» only contains cells for which the IDs have shared inheritance, and a value of False indicates that inheritance is ignored.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: levels
        in: query
        description: type Integer, optional, default ⇐ 1 Levels indicates the relative number of levels in the hierarchy to be traversed in assembling the result «set» Figure 15 illustrates the parent, child and sibling suite of functions through examples.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 1
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: |-
            A list of DGGS zones.

            The response contains a list of DGGS zones. The response can be a GeoJSON payload with full boundaries, for traditional clients, or
            a simple list of zone ids, for DGGS aware clients
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionGeoJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
                - type: Feature
                  id: Q4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
            application/dggs+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionDGGSJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                  - P4
                - type: Feature
                  id: Q4
                  geometry:
                  - Q4
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
                - type: Feature
                  id: myFeature.1
                  geometry:
                  - Q4
                  - P4
                  - P32
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
            application/zoneids+json:
              schema:
                $ref: '#/components/schemas/zoneList'
              example:
              - zones:
                - O
                - P
                - Q
                - R
                links:
                - href: http://data.example.org/dggs/rHeadPix/zones?bbox=-20,-40,20,40&startIndex=1000
                  rel: next
                  type: application/json
                  title: the next page of
            text/html:
              schema:
                type: string
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}/sibling:
    get:
      tags:
      - DGGS ZoneQuery Operations - Set Functions
      summary: Get the list of zones siblings of a given zone
      parameters:
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: Q3
      - name: inheritId
        in: query
        description: type Boolean, optional, default ⇐ False When inheritID has a value of True the result «set» only contains cells for which the IDs have shared inheritance, and a value of False indicates that inheritance is ignored.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: levels
        in: query
        description: type Integer, optional, default ⇐ 1 Levels indicates the relative number of levels in the hierarchy to be traversed in assembling the result «set» Figure 15 illustrates the parent, child and sibling suite of functions through examples.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 1
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: |-
            A list of DGGS zones.

            The response contains a list of DGGS zones. The response can be a GeoJSON payload with full boundaries, for traditional clients, or
            a simple list of zone ids, for DGGS aware clients
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionGeoJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
                - type: Feature
                  id: Q4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
            application/dggs+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionDGGSJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                  - P4
                - type: Feature
                  id: Q4
                  geometry:
                  - Q4
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
                - type: Feature
                  id: myFeature.1
                  geometry:
                  - Q4
                  - P4
                  - P32
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
            application/zoneids+json:
              schema:
                $ref: '#/components/schemas/zoneList'
              example:
              - zones:
                - O
                - P
                - Q
                - R
                links:
                - href: http://data.example.org/dggs/rHeadPix/zones?bbox=-20,-40,20,40&startIndex=1000
                  rel: next
                  type: application/json
                  title: the next page of
            text/html:
              schema:
                type: string
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /collections/{collectionId}/dggs/{dggsRSID}/zone/{ZonalID}/buffer:
    get:
      tags:
      - Collection ZoneQuery Operations - Set Functions
      summary: Get the list of zonalId that are within a buffer of dist from the given zoneId within a Collection
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: Q3
      - name: dist
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/distance'
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: |-
            A list of DGGS zones.

            The response contains a list of DGGS zones. The response can be a GeoJSON payload with full boundaries, for traditional clients, or
            a simple list of zone ids, for DGGS aware clients
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionGeoJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
                - type: Feature
                  id: Q4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
            application/dggs+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionDGGSJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                  - P4
                - type: Feature
                  id: Q4
                  geometry:
                  - Q4
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
                - type: Feature
                  id: myFeature.1
                  geometry:
                  - Q4
                  - P4
                  - P32
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
            application/zoneids+json:
              schema:
                $ref: '#/components/schemas/zoneList'
              example:
              - zones:
                - O
                - P
                - Q
                - R
                links:
                - href: http://data.example.org/dggs/rHeadPix/zones?bbox=-20,-40,20,40&startIndex=1000
                  rel: next
                  type: application/json
                  title: the next page of
            text/html:
              schema:
                type: string
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /collections/{collectionId}/dggs/{dggsRSID}/zone/{ZonalID}/difference:
    get:
      tags:
      - Collection ZoneQuery Operations - Set Functions
      summary: Get the list of zonalID that are the result of zoneId.difference(another)  within a Collection
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: rangeRefine
        in: query
        description: Specifies the range of refinement levels to include in the return «set». The lower and upper bounds in the refinementLevelRange datatype are both included in the range.
        required: false
        style: form
        explode: false
        schema:
          maxItems: 2
          minItems: 2
          type: array
          items:
            type: integer
        example: rangeRefine=0,5
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: |-
            A list of DGGS zones.

            The response contains a list of DGGS zones. The response can be a GeoJSON payload with full boundaries, for traditional clients, or
            a simple list of zone ids, for DGGS aware clients
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionGeoJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
                - type: Feature
                  id: Q4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
            application/dggs+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionDGGSJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                  - P4
                - type: Feature
                  id: Q4
                  geometry:
                  - Q4
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
                - type: Feature
                  id: myFeature.1
                  geometry:
                  - Q4
                  - P4
                  - P32
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
            application/zoneids+json:
              schema:
                $ref: '#/components/schemas/zoneList'
              example:
              - zones:
                - O
                - P
                - Q
                - R
                links:
                - href: http://data.example.org/dggs/rHeadPix/zones?bbox=-20,-40,20,40&startIndex=1000
                  rel: next
                  type: application/json
                  title: the next page of
            text/html:
              schema:
                type: string
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /collections/{collectionId}/dggs/{dggsRSID}/zone/{ZonalID}/intersection:
    get:
      tags:
      - Collection ZoneQuery Operations - Set Functions
      summary: Get the list of zonalID that are the result of zoneId.intersection(another)  within a Collection
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: rangeRefine
        in: query
        description: Specifies the range of refinement levels to include in the return «set». The lower and upper bounds in the refinementLevelRange datatype are both included in the range.
        required: false
        style: form
        explode: false
        schema:
          maxItems: 2
          minItems: 2
          type: array
          items:
            type: integer
        example: rangeRefine=0,5
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: |-
            A list of DGGS zones.

            The response contains a list of DGGS zones. The response can be a GeoJSON payload with full boundaries, for traditional clients, or
            a simple list of zone ids, for DGGS aware clients
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionGeoJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
                - type: Feature
                  id: Q4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
            application/dggs+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionDGGSJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                  - P4
                - type: Feature
                  id: Q4
                  geometry:
                  - Q4
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
                - type: Feature
                  id: myFeature.1
                  geometry:
                  - Q4
                  - P4
                  - P32
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
            application/zoneids+json:
              schema:
                $ref: '#/components/schemas/zoneList'
              example:
              - zones:
                - O
                - P
                - Q
                - R
                links:
                - href: http://data.example.org/dggs/rHeadPix/zones?bbox=-20,-40,20,40&startIndex=1000
                  rel: next
                  type: application/json
                  title: the next page of
            text/html:
              schema:
                type: string
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /collections/{collectionId}/dggs/{dggsRSID}/zone/{ZonalID}/symDifference:
    get:
      tags:
      - Collection ZoneQuery Operations - Set Functions
      summary: Get the list of zonalID that are the result of zoneId.symDifference(another)  within a Collection
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: rangeRefine
        in: query
        description: Specifies the range of refinement levels to include in the return «set». The lower and upper bounds in the refinementLevelRange datatype are both included in the range.
        required: false
        style: form
        explode: false
        schema:
          maxItems: 2
          minItems: 2
          type: array
          items:
            type: integer
        example: rangeRefine=0,5
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: |-
            A list of DGGS zones.

            The response contains a list of DGGS zones. The response can be a GeoJSON payload with full boundaries, for traditional clients, or
            a simple list of zone ids, for DGGS aware clients
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionGeoJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
                - type: Feature
                  id: Q4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
            application/dggs+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionDGGSJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                  - P4
                - type: Feature
                  id: Q4
                  geometry:
                  - Q4
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
                - type: Feature
                  id: myFeature.1
                  geometry:
                  - Q4
                  - P4
                  - P32
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
            application/zoneids+json:
              schema:
                $ref: '#/components/schemas/zoneList'
              example:
              - zones:
                - O
                - P
                - Q
                - R
                links:
                - href: http://data.example.org/dggs/rHeadPix/zones?bbox=-20,-40,20,40&startIndex=1000
                  rel: next
                  type: application/json
                  title: the next page of
            text/html:
              schema:
                type: string
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /collections/{collectionId}/dggs/{dggsRSID}/zone/{ZonalID}/union:
    get:
      tags:
      - Collection ZoneQuery Operations - Set Functions
      summary: Get the list of zonalID that are the result of zoneId.union(another)  within a Collection
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: rangeRefine
        in: query
        description: Specifies the range of refinement levels to include in the return «set». The lower and upper bounds in the refinementLevelRange datatype are both included in the range.
        required: false
        style: form
        explode: false
        schema:
          maxItems: 2
          minItems: 2
          type: array
          items:
            type: integer
        example: rangeRefine=0,5
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: |-
            A list of DGGS zones.

            The response contains a list of DGGS zones. The response can be a GeoJSON payload with full boundaries, for traditional clients, or
            a simple list of zone ids, for DGGS aware clients
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionGeoJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
                - type: Feature
                  id: Q4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
            application/dggs+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionDGGSJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                  - P4
                - type: Feature
                  id: Q4
                  geometry:
                  - Q4
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
                - type: Feature
                  id: myFeature.1
                  geometry:
                  - Q4
                  - P4
                  - P32
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
            application/zoneids+json:
              schema:
                $ref: '#/components/schemas/zoneList'
              example:
              - zones:
                - O
                - P
                - Q
                - R
                links:
                - href: http://data.example.org/dggs/rHeadPix/zones?bbox=-20,-40,20,40&startIndex=1000
                  rel: next
                  type: application/json
                  title: the next page of
            text/html:
              schema:
                type: string
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /collections/{collectionId}/dggs/{dggsRSID}/zone/{ZonalID}/child:
    get:
      tags:
      - Collection ZoneQuery Operations - Set Functions
      summary: Get the list of zones children of a given zone  within a Collection
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: Q3
      - name: inheritId
        in: query
        description: type Boolean, optional, default ⇐ False When inheritID has a value of True the result «set» only contains cells for which the IDs have shared inheritance, and a value of False indicates that inheritance is ignored.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: levels
        in: query
        description: type Integer, optional, default ⇐ 1 Levels indicates the relative number of levels in the hierarchy to be traversed in assembling the result «set» Figure 15 illustrates the parent, child and sibling suite of functions through examples.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 1
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: |-
            A list of DGGS zones.

            The response contains a list of DGGS zones. The response can be a GeoJSON payload with full boundaries, for traditional clients, or
            a simple list of zone ids, for DGGS aware clients
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionGeoJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
                - type: Feature
                  id: Q4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
            application/dggs+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionDGGSJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                  - P4
                - type: Feature
                  id: Q4
                  geometry:
                  - Q4
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
                - type: Feature
                  id: myFeature.1
                  geometry:
                  - Q4
                  - P4
                  - P32
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
            application/zoneids+json:
              schema:
                $ref: '#/components/schemas/zoneList'
              example:
              - zones:
                - O
                - P
                - Q
                - R
                links:
                - href: http://data.example.org/dggs/rHeadPix/zones?bbox=-20,-40,20,40&startIndex=1000
                  rel: next
                  type: application/json
                  title: the next page of
            text/html:
              schema:
                type: string
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /collections/{collectionId}/dggs/{dggsRSID}/zone/{ZonalID}/parent:
    get:
      tags:
      - Collection ZoneQuery Operations - Set Functions
      summary: Get the list of zones parents of a given zone  within a Collection
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: Q3
      - name: inheritId
        in: query
        description: type Boolean, optional, default ⇐ False When inheritID has a value of True the result «set» only contains cells for which the IDs have shared inheritance, and a value of False indicates that inheritance is ignored.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: levels
        in: query
        description: type Integer, optional, default ⇐ 1 Levels indicates the relative number of levels in the hierarchy to be traversed in assembling the result «set» Figure 15 illustrates the parent, child and sibling suite of functions through examples.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 1
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: |-
            A list of DGGS zones.

            The response contains a list of DGGS zones. The response can be a GeoJSON payload with full boundaries, for traditional clients, or
            a simple list of zone ids, for DGGS aware clients
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionGeoJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
                - type: Feature
                  id: Q4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
            application/dggs+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionDGGSJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                  - P4
                - type: Feature
                  id: Q4
                  geometry:
                  - Q4
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
                - type: Feature
                  id: myFeature.1
                  geometry:
                  - Q4
                  - P4
                  - P32
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
            application/zoneids+json:
              schema:
                $ref: '#/components/schemas/zoneList'
              example:
              - zones:
                - O
                - P
                - Q
                - R
                links:
                - href: http://data.example.org/dggs/rHeadPix/zones?bbox=-20,-40,20,40&startIndex=1000
                  rel: next
                  type: application/json
                  title: the next page of
            text/html:
              schema:
                type: string
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /collections/{collectionId}/dggs/{dggsRSID}/zone/{ZonalID}/sibling:
    get:
      tags:
      - Collection ZoneQuery Operations - Set Functions
      summary: Get the list of zones siblings of a given zone  within a Collection
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: Q3
      - name: inheritId
        in: query
        description: type Boolean, optional, default ⇐ False When inheritID has a value of True the result «set» only contains cells for which the IDs have shared inheritance, and a value of False indicates that inheritance is ignored.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: levels
        in: query
        description: type Integer, optional, default ⇐ 1 Levels indicates the relative number of levels in the hierarchy to be traversed in assembling the result «set» Figure 15 illustrates the parent, child and sibling suite of functions through examples.
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 1
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: |-
            A list of DGGS zones.

            The response contains a list of DGGS zones. The response can be a GeoJSON payload with full boundaries, for traditional clients, or
            a simple list of zone ids, for DGGS aware clients
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionGeoJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
                - type: Feature
                  id: Q4
                  geometry:
                    type: Polygon
                    coordinates:
                    - '...'
                  properties:
                    resolution: 0
                    center:
                      type: Point
                      coordinates:
                      - 0
                      - 0
            application/dggs+json:
              schema:
                $ref: '#/components/schemas/zoneCollectionDGGSJSON'
              example:
              - type: FeatureCollection
                features:
                - type: Feature
                  id: P4
                  geometry:
                  - P4
                - type: Feature
                  id: Q4
                  geometry:
                  - Q4
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
                - type: Feature
                  id: myFeature.1
                  geometry:
                  - Q4
                  - P4
                  - P32
                  properties:
                    myAttribute: 3
                    otherAttribute: abc
            application/zoneids+json:
              schema:
                $ref: '#/components/schemas/zoneList'
              example:
              - zones:
                - O
                - P
                - Q
                - R
                links:
                - href: http://data.example.org/dggs/rHeadPix/zones?bbox=-20,-40,20,40&startIndex=1000
                  rel: next
                  type: application/json
                  title: the next page of
            text/html:
              schema:
                type: string
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}/relativePosition:
    get:
      tags:
      - DGGS ZoneQuery Operations - Query Functions
      summary: Determine the relativePosition of another ZonalID to the current ZoneId
      parameters:
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: |-
            The relativePosition of one ZoneId to another in a projectTo dimension

            The response contains a member of the relativePosition enumerated schema.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/relativePosition'
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}/contains:
    get:
      tags:
      - DGGS ZoneQuery Operations - Query Functions
      summary: Test if the current ZoneId contains another ZonalID
      parameters:
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}/crosses:
    get:
      tags:
      - DGGS ZoneQuery Operations - Query Functions
      summary: Test if the current ZoneId crosses another ZonalID
      parameters:
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}/disjoint:
    get:
      tags:
      - DGGS ZoneQuery Operations - Query Functions
      summary: Test if the current ZoneId is disjoint another ZonalID
      parameters:
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}/equals:
    get:
      tags:
      - DGGS ZoneQuery Operations - Query Functions
      summary: Test if the current ZoneId equals another ZonalID
      parameters:
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}/intersects:
    get:
      tags:
      - DGGS ZoneQuery Operations - Query Functions
      summary: Test if the current ZoneId intersects another ZonalID
      parameters:
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}/overlaps:
    get:
      tags:
      - DGGS ZoneQuery Operations - Query Functions
      summary: Test if the current ZoneId overlaps another ZonalID
      parameters:
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}/touches:
    get:
      tags:
      - DGGS ZoneQuery Operations - Query Functions
      summary: Test if the current ZoneId touches another ZonalID
      parameters:
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}/within:
    get:
      tags:
      - DGGS ZoneQuery Operations - Query Functions
      summary: Test if the current ZoneId within another ZonalID
      parameters:
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}/withinDistance:
    get:
      tags:
      - DGGS ZoneQuery Operations - Query Functions
      summary: Test if the current ZoneId is withinDistance another ZonalID
      parameters:
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: distance
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/distance'
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}/childOf:
    get:
      tags:
      - DGGS ZoneQuery Operations - Query Functions
      summary: Test if the current ZoneId is childOf another ZonalID
      parameters:
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: inheritId
        in: query
        description: type Boolean, optional, default ⇐ False When inheritID has a value of True the result «set» only contains cells for which the IDs have shared inheritance, and a value of False indicates that inheritance is ignored.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}/parentOf:
    get:
      tags:
      - DGGS ZoneQuery Operations - Query Functions
      summary: Test if the current ZoneId is parentOf another ZonalID
      parameters:
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: inheritId
        in: query
        description: type Boolean, optional, default ⇐ False When inheritID has a value of True the result «set» only contains cells for which the IDs have shared inheritance, and a value of False indicates that inheritance is ignored.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}/siblingOf:
    get:
      tags:
      - DGGS ZoneQuery Operations - Query Functions
      summary: Test if the current ZoneId is siblingOf another ZonalID
      parameters:
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: inheritId
        in: query
        description: type Boolean, optional, default ⇐ False When inheritID has a value of True the result «set» only contains cells for which the IDs have shared inheritance, and a value of False indicates that inheritance is ignored.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /collections/{collectionId}/dggs/{dggsRSID}/zone/{ZonalID}/relativePosition:
    get:
      tags:
      - Collection ZoneQuery Operations - Query Functions
      summary: Determine the relativePosition of another ZonalID to the current ZoneId within a collection
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: |-
            The relativePosition of one ZoneId to another in a projectTo dimension

            The response contains a member of the relativePosition enumerated schema.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/relativePosition'
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /collections/{collectionId}/dggs/{dggsRSID}/zone/{ZonalID}/contains:
    get:
      tags:
      - Collection ZoneQuery Operations - Query Functions
      summary: Test if the current ZoneId contains another ZonalID
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /collections/{collectionId}/dggs/{dggsRSID}/zone/{ZonalID}/crosses:
    get:
      tags:
      - Collection ZoneQuery Operations - Query Functions
      summary: Test if the current ZoneId crosses another ZonalID
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /collections/{collectionId}/dggs/{dggsRSID}/zone/{ZonalID}/disjoint:
    get:
      tags:
      - Collection ZoneQuery Operations - Query Functions
      summary: Test if the current ZoneId is disjoint another ZonalID
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /collections/{collectionId}/dggs/{dggsRSID}/zone/{ZonalID}/equals:
    get:
      tags:
      - Collection ZoneQuery Operations - Query Functions
      summary: Test if the current ZoneId equals another ZonalID
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /collections/{collectionId}/dggs/{dggsRSID}/zone/{ZonalID}/intersects:
    get:
      tags:
      - Collection ZoneQuery Operations - Query Functions
      summary: Test if the current ZoneId intersects another ZonalID
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /collections/{collectionId}/dggs/{dggsRSID}/zone/{ZonalID}/overlaps:
    get:
      tags:
      - Collection ZoneQuery Operations - Query Functions
      summary: Test if the current ZoneId overlaps another ZonalID
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /collections/{collectionId}/dggs/{dggsRSID}/zone/{ZonalID}/touches:
    get:
      tags:
      - Collection ZoneQuery Operations - Query Functions
      summary: Test if the current ZoneId touches another ZonalID
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /collections/{collectionId}/dggs/{dggsRSID}/zone/{ZonalID}/within:
    get:
      tags:
      - Collection ZoneQuery Operations - Query Functions
      summary: Test if the current ZoneId within another ZonalID
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /collections/{collectionId}/dggs/{dggsRSID}/zone/{ZonalID}/withinDistance:
    get:
      tags:
      - Collection ZoneQuery Operations - Query Functions
      summary: Test if the current ZoneId is withinDistance another ZonalID
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: distance
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/distance'
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /collections/{collectionId}/dggs/{dggsRSID}/zone/{ZonalID}/childOf:
    get:
      tags:
      - Collection ZoneQuery Operations - Query Functions
      summary: Test if the current ZoneId is childOf another ZonalID
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: inheritId
        in: query
        description: type Boolean, optional, default ⇐ False When inheritID has a value of True the result «set» only contains cells for which the IDs have shared inheritance, and a value of False indicates that inheritance is ignored.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /collections/{collectionId}/dggs/{dggsRSID}/zone/{ZonalID}/parentOf:
    get:
      tags:
      - Collection ZoneQuery Operations - Query Functions
      summary: Test if the current ZoneId is parentOf another ZonalID
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: inheritId
        in: query
        description: type Boolean, optional, default ⇐ False When inheritID has a value of True the result «set» only contains cells for which the IDs have shared inheritance, and a value of False indicates that inheritance is ignored.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /collections/{collectionId}/dggs/{dggsRSID}/zone/{ZonalID}/siblingOf:
    get:
      tags:
      - Collection ZoneQuery Operations - Query Functions
      summary: Test if the current ZoneId is siblingOf another ZonalID
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: inheritId
        in: query
        description: type Boolean, optional, default ⇐ False When inheritID has a value of True the result «set» only contains cells for which the IDs have shared inheritance, and a value of False indicates that inheritance is ignored.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}/relate:
    get:
      tags:
      - DGGS ZoneQuery Operations - Reference Functions
      summary: Test if the current ZoneId satisfies relate matrix another ZonalID
      parameters:
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: matrix
        in: query
        required: false
        style: form
        explode: true
        schema:
          maxItems: 9
          minItems: 9
          type: array
          items:
            type: string
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /dggs/{dggsRSID}/zone/{ZonalID}/relatePosition:
    get:
      tags:
      - DGGS ZoneQuery Operations - Reference Functions
      summary: Test if the current ZoneId satisfies relatePosition relativePosition another ZonalID
      parameters:
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: relate
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/relativePosition'
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /collections/{collectionId}/dggs/{dggsRSID}/zone/{ZonalID}/relate:
    get:
      tags:
      - Collection ZoneQuery Operations - Reference Functions
      summary: Test if the current ZoneId satisfies relate matrix another ZonalID
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: matrix
        in: query
        required: false
        style: form
        explode: true
        schema:
          maxItems: 9
          minItems: 9
          type: array
          items:
            type: string
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
  /collections/{collectionId}/dggs/{dggsRSID}/zone/{ZonalID}/relatePosition:
    get:
      tags:
      - Collection ZoneQuery Operations - Reference Functions
      summary: Test if the current ZoneId satisfies relatePosition relativePosition another ZonalID
      parameters:
      - name: collectionId
        in: path
        description: local identifier of a collection
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dggsRSID
        in: path
        description: DGGS implementation identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ZonalID
        in: query
        description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
        required: true
        style: form
        explode: true
        schema:
          type: string
          example: R4
      - name: relate
        in: query
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/relativePosition'
      - name: projectTo
        in: query
        description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
        required: false
        style: form
        explode: true
        schema:
          maxItems: 4
          minItems: 4
          type: array
          items:
            type: string
      responses:
        "200":
          description: A single boolean type response
          content:
            application/json:
              schema:
                type: boolean
              example:
                result: true
            text/html:
              schema:
                type: boolean
        "302":
          description: http response status code 302
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-302'
        "303":
          description: http response status code 303
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-303'
        "304":
          description: http response status code 304
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-304'
        "307":
          description: http response status code 307
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-307'
        "308":
          description: http response status code 308
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-308'
        "400":
          description: http response status code 400
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-400'
        "401":
          description: http response status code 401
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-401'
        "403":
          description: http response status code 403
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-403'
        "404":
          description: http response status code 404
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-404'
        "405":
          description: http response status code 405
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-405'
        "406":
          description: http response status code 406
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-406'
        "500":
          description: http response status code 500
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-response-500'
components:
  schemas:
    http-response-302:
      required:
      - code
      - description
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      example:
        code: 302
        description: The target resource was found but resides temporarily under a different URI. A 302 response is not evidence that the operation has been successfully completed.
    http-response-303:
      required:
      - code
      - description
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      example:
        code: 303
        description: The server is redirecting the user agent to a different resource. A 303 response is not evidence that the operation has been successfully completed.
    http-response-304:
      required:
      - code
      - description
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      example:
        code: 304
        description: An entity tag was provided in the request and the resource has not changed since the previous request.
    http-response-307:
      required:
      - code
      - description
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      example:
        code: 307
        description: The target resource resides temporarily under a different URI and the user agent MUST NOT change the request method if it performs an automatic redirection to that URI.
    http-response-308:
      required:
      - code
      - description
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      example:
        code: 308
        description: Indicates that the target resource has been assigned a new permanent URI and any future references to this resource ought to use one of the enclosed URIs.
    http-response-400:
      required:
      - code
      - description
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      example:
        code: 400
        description: The server cannot or will not process the request due to an apparent client error. For example, a query parameter had an incorrect value.
    http-response-401:
      required:
      - code
      - description
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      example:
        code: 401
        description: The request requires user authentication. The response includes a WWW-Authenticate header field containing a challenge applicable to the requested resource.
    http-response-403:
      required:
      - code
      - description
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      example:
        code: 403
        description: The server understood the request, but is refusing to fulfill it. While status code 401 indicates missing or bad authentication, status code 403 indicates that authentication is not the issue, but the client is not authorized to perform the requested operation on the resource.
    http-response-404:
      required:
      - code
      - description
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      example:
        code: 404
        description: The requested resource does not exist on the server. For example, a path parameter had an incorrect value.
    http-response-405:
      required:
      - code
      - description
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      example:
        code: 405
        description: The request method is not supported. For example, a POST request was submitted, but the resource only supports GET requests.
    http-response-406:
      required:
      - code
      - description
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      example:
        code: 406
        description: Content negotiation failed. For example, the Accept header submitted in the request did not support any of the media types supported by the server for the requested resource.
    http-response-500:
      required:
      - code
      - description
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      example:
        code: 500
        description: An internal error occurred in the server.
    collections:
      allOf:
      - $ref: '#/components/schemas/collection_1'
      - $ref: '#/components/schemas/collection-link'
    collection_1:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: identifier of the collection used, for example, in URIs
          example: buildings
        title:
          type: string
          description: human readable title of the collection
          example: Buildings in the city of Bonn
        description:
          type: string
          description: a description of the collection
          example: This collection contains buildings
        keywords:
          type: array
          description: keywords about the elements in the collection
          items:
            $ref: '#/components/schemas/keyword'
        attribution:
          type: string
          description: The provider of the source data for the collection. Map viewers normally show this information at the bottom of the map
          example: OpenStreetMap
        extent:
          $ref: '#/components/schemas/extent'
        crs:
          type: array
          description: The list of coordinate reference systems supported by the service. The first item is the default coordinate reference system.
          example:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
          - http://www.opengis.net/def/crs/EPSG/0/4326
          items:
            type: string
          default:
          - http://www.opengis.net/def/crs/OGC/1.3/CRS84
    collection-link:
      required:
      - links
      type: object
      properties:
        links:
          type: array
          example:
          - href: http://example.com/collections/buildings?f=json
            rel: self
            type: application/json
            title: This document
          - href: http://example.com/concepts/buildings.html
            rel: describedby
            type: text/html'
          - href: https://creativecommons.org/publicdomain/zero/1.0/
            rel: license
            type: text/html
            title: CC0-1.0
          - href: https://creativecommons.org/publicdomain/zero/1.0/rdf
            rel: license
            type: application/rdf+xml
            title: CC0-1.0
          - href: http://data.example.com/collections/buildings/items
            rel: http://www.opengis.net/def/rel/ogc/1.0/items
            title: Retrieve the items of the buildings collection
            type: application/geo+json
          - href: http://data.example.com/collections/buildings/tiles
            rel: http://www.opengis.net/def/rel/ogc/1.0/tilesets-vector
            type: application/json
          items:
            $ref: '#/components/schemas/link'
    dggsRsZoneClass:
      required:
      - numberOfZones
      - refinementLevel
      - zoneErrorBudget
      - zoneExtent
      type: object
      properties:
        refinementLevel:
          type: number
          description: refinement level of the selected DGGS
        numberOfZones:
          type: string
          description: number of DGGS Zones defined for a given refinement level of the selected DGGS
        zoneExtent:
          $ref: '#/components/schemas/dggsRsZoneClass_zoneExtent'
    dggsRsParameters:
      required:
      - dggsRsDescription
      - dggsRsStructure
      - dggsRsZoneClasses
      - links
      type: object
      properties:
        dggsRsDescription:
          $ref: '#/components/schemas/dggsRsParameters_dggsRsDescription'
        dggsRsStructure:
          $ref: '#/components/schemas/dggsRsParameters_dggsRsStructure'
        dggsRsZoneClasses:
          type: array
          description: DGGS_RS  Heirarchy of Zone Classes for the selected DGGS implementation.
          example:
          - refinementLevel: 0
            numberOfZones: 6
            zoneExtent:
              spatialExtent: 8.5E13
              spatialUnits: m^2
            zoneErrorBudget:
              spatialErrorBudget: 8.5E11
              spatialUnits: m^2
          - refinementLevel: 1
            numberOfZones: 54
            zoneExtent:
              spatialExtent: 9.5E12
              spatialUnits: m^2
            zoneErrorBudget:
              spatialErrorBudget: 9.5E10
              spatialUnits: m^2
          - refinementLevel: 2
            numberOfZones: 486
            zoneExtent:
              spatialExtent: 1.1E12
              spatialUnits: m^2
            zoneErrorBudget:
              spatialErrorBudget: 1.1E10
              spatialUnits: m^2
          - refinementLevel: 3
            numberOfZones: 4374
            zoneExtent:
              spatialExtent: 1.2E11
              spatialUnits: m^2
            zoneErrorBudget:
              spatialErrorBudget: 1.2E9
              spatialUnits: m^2
          - refinementLevel: 4
            numberOfZones: 39366
            zoneExtent:
              spatialExtent: 1.3E10
              spatialUnits: m^2
            zoneErrorBudget:
              spatialErrorBudget: 1.3E8
              spatialUnits: m^2
          - refinementLevel: 5
            numberOfZones: 354294
            zoneExtent:
              spatialExtent: 1.4E9
              spatialUnits: m^2
            zoneErrorBudget:
              spatialErrorBudget: 1.4E7
              spatialUnits: m^2
          - refinementLevel: 6
            numberOfZones: 3188646
            zoneExtent:
              spatialExtent: 1.6E8
              spatialUnits: m^2
            zoneErrorBudget:
              spatialErrorBudget: 1600000.0
              spatialUnits: m^2
          - refinementLevel: 7
            numberOfZones: 28697814
            zoneExtent:
              spatialExtent: 1.8E7
              spatialUnits: m^2
            zoneErrorBudget:
              spatialErrorBudget: 180000.0
              spatialUnits: m^2
          - refinementLevel: 8
            numberOfZones: 28697814
            zoneExtent:
              spatialExtent: 2000000.0
              spatialUnits: m^2
            zoneErrorBudget:
              spatialErrorBudget: 20000.0
              spatialUnits: m^2
          - refinementLevel: 9
            numberOfZones: 258280326
            zoneExtent:
              spatialExtent: 220000.0
              spatialUnits: m^2
            zoneErrorBudget:
              spatialErrorBudget: 2200.0
              spatialUnits: m^2
          - refinementLevel: 10
            numberOfZones: 2324522934
            zoneExtent:
              spatialExtent: 24000.0
              spatialUnits: m^2
            zoneErrorBudget:
              spatialErrorBudget: 240.0
              spatialUnits: m^2
          - refinementLevel: 11
            numberOfZones: 20920706406
            zoneExtent:
              spatialExtent: 2700.0
              spatialUnits: m^2
            zoneErrorBudget:
              spatialErrorBudget: 27.0
              spatialUnits: m^2
          - refinementLevel: 12
            numberOfZones: 188286357654
            zoneExtent:
              spatialExtent: 300
              spatialUnits: m^2
            zoneErrorBudget:
              spatialErrorBudget: 3
              spatialUnits: m^2
          - refinementLevel: 13
            numberOfZones: 1.694577219E12
            zoneExtent:
              spatialExtent: 33
              spatialUnits: m^2
            zoneErrorBudget:
              spatialErrorBudget: 0.33
              spatialUnits: m^2
          - refinementLevel: 14
            numberOfZones: 1.525119497E13
            zoneExtent:
              spatialExtent: 3.7
              spatialUnits: m^2
            zoneErrorBudget:
              spatialErrorBudget: 0.037
              spatialUnits: m^2
          - refinementLevel: 15
            numberOfZones: 1.372607547E14
            zoneExtent:
              spatialExtent: 0.41
              spatialUnits: m^2
            zoneErrorBudget:
              spatialErrorBudget: 0.0041
              spatialUnits: m^2
          items:
            $ref: '#/components/schemas/dggsRsZoneClass'
        links:
          type: array
          description: List of links associated with this OGC API DGGS Resource
          example:
            links:
            - rel: self
              type: application/json
              title: The JSON representation of this OGC API endpoint
              href: https://example.com/dggs/TB16-Pix?f=json
            - rel: alternate
              type: text/html
              title: The HTML representation of this OGC API endpoint.
              href: https://example.com/dggs/TB16-Pix
          items:
            $ref: '#/components/schemas/link'
    keyword:
      required:
      - keyword
      type: object
      properties:
        keyword:
          type: string
          example: land cover
        code:
          type: string
          example: "4612"
        codeSpace:
          type: string
          example: https://www.eionet.europa.eu/gemet/en/concept/
      nullable: true
    extent:
      type: object
      properties:
        spatial:
          $ref: '#/components/schemas/spatialExtent'
        temporal:
          $ref: '#/components/schemas/temporalExtent'
      description: |-
        The extent of the collection. In the Core only spatial and temporal extents are specified. Extensions may add additional members to represent other  extents, for example, thermal or pressure ranges.
        It is recommended that the statial extent is expected in CRS84 except if this is not possible.
    spatialExtent:
      required:
      - bbox
      type: object
      properties:
        bbox:
          $ref: '#/components/schemas/bbox'
        crs:
          $ref: '#/components/schemas/crs'
      description: The spatial extent of the element in the collection.
    bbox:
      minItems: 1
      type: array
      description: |-
        One or more bounding boxes that describe the spatial extent of the dataset.
        In the Core only a single bounding box is supported. Extensions may support
        additional areas. If multiple areas are provided, the union of the bounding
        boxes describes the spatial extent.
      example:
      - - 7.01
        - 50.63
        - 7.22
        - 50.78
      items:
        maxItems: 6
        minItems: 4
        type: array
        description: |-
          West, south, east, north edges of the bounding box. The coordinates
          are in the coordinate reference system specified in `crs`. By default
          this is WGS 84 longitude/latitude (CRS84).
        items:
          type: number
    crs:
      type: string
      description: |-
        Coordinate reference system of the coordinates in the spatial extent
        (property `bbox`). The default reference system is WGS 84 longitude/latitude.
        In the Core this is the only supported coordinate reference system.
        Extensions may support additional coordinate reference systems and add
        additional enum values.
      default: http://www.opengis.net/def/crs/OGC/1.3/CRS84
      enum:
      - http://www.opengis.net/def/crs/OGC/1.3/CRS84
    temporalExtent:
      type: object
      properties:
        interval:
          $ref: '#/components/schemas/temporalInterval'
        trs:
          $ref: '#/components/schemas/trs'
      description: The temporal extent of the element in the collection.
      nullable: true
    temporalInterval:
      minItems: 1
      type: array
      description: |-
        One or more time intervals that describe the temporal extent of the dataset.
        The value `null` is supported and indicates an open time intervall.
        In the Core only a single time interval is supported. Extensions may support
        multiple intervals. If multiple intervals are provided, the union of the
        intervals describes the temporal extent.
      nullable: true
      items:
        maxItems: 2
        minItems: 2
        type: array
        description: |-
          Begin and end times of the time interval. The timestamps
          are in the coordinate reference system specified in `trs`. By default
          this is the Gregorian calendar.
        example:
        - 2010-02-15T12:34:56.000+0000
        - null
        items:
          type: string
          format: date-time
          nullable: true
    dggs-list:
      required:
      - links
      type: object
      properties:
        links:
          type: array
          description: The list of links to the DGGS Resource Specifications implemented by this OGC API Server.
          example:
            links:
            - rel: self
              type: application/json
              title: The JSON representation of the list of all DGGS Implementations served from this OGC API endpoint
              href: https://example.com/dggs?f=json
            - rel: alternate
              type: text/html
              title: The HTML representation of the list of all DGGS Implementations served from this OGC API endpoint
              href: https://example.com/dggs
            - rel: TB16-Pix
              type: application/json
              title: The JSON representation of the landing page for the TB16-Pix DGGS
              href: https://example.com/dggs/TB16-Pix?f=json
            - rel: TB16-Pix
              type: text/html
              title: The HTML representation of the landing page for the TB16-Pix DGGS
              href: https://example.com/dggs/TB16-Pix
          items:
            $ref: '#/components/schemas/link'
    collection-list:
      required:
      - dggs-list
      - links
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        dggs-list:
          type: array
          items:
            type: string
    zoneGeoJSON:
      allOf:
      - $ref: '#/components/schemas/featureGeoJSON'
      - required:
        - resolution
        type: object
        properties:
          resolution:
            type: number
    DGGSJSON:
      required:
      - geometry
      - id
      - properties
      - type
      type: object
      properties:
        id:
          oneOf:
          - type: string
          - type: integer
        type:
          type: string
          enum:
          - Feature
        geometry:
          type: array
          description: The geometry of the feature, as a list of DGGS zone ids
          items:
            type: string
        properties:
          type: object
          nullable: true
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
    zoneCollectionGeoJSON:
      required:
      - features
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - FeatureCollection
        features:
          type: array
          items:
            $ref: '#/components/schemas/zoneGeoJSON'
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        timeStamp:
          $ref: '#/components/schemas/timeStamp'
        numberMatched:
          $ref: '#/components/schemas/numberMatched'
        numberReturned:
          $ref: '#/components/schemas/numberReturned'
    zoneCollectionDGGSJSON:
      required:
      - features
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - FeatureCollection
        features:
          type: array
          items:
            $ref: '#/components/schemas/DGGSJSON'
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        timeStamp:
          $ref: '#/components/schemas/timeStamp'
        numberMatched:
          $ref: '#/components/schemas/numberMatched'
        numberReturned:
          $ref: '#/components/schemas/numberReturned'
    zoneList:
      required:
      - links
      - zones
      type: object
      properties:
        zones:
          type: array
          items:
            type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        timeStamp:
          $ref: '#/components/schemas/timeStamp'
        numberMatched:
          $ref: '#/components/schemas/numberMatched'
        numberReturned:
          $ref: '#/components/schemas/numberReturned'
    link:
      required:
      - href
      - rel
      - type
      type: object
      properties:
        href:
          type: string
          example: http://data.example.com/buildings/123
        rel:
          type: string
          example: alternate
        type:
          type: string
          example: application/json
        hreflang:
          type: string
          example: en
        title:
          type: string
          example: Trierer Strasse 70, 53115 Bonn
        length:
          type: integer
    timeStamp:
      type: string
      description: This property indicates the time and date when the response was generated.
      format: date-time
      example: 2017-08-17T08:05:32Z
    numberMatched:
      minimum: 0
      type: integer
      description: |-
        The number of features of the feature type that match the selection
        parameters like `bbox`.
      example: 127
    numberReturned:
      minimum: 0
      type: integer
      description: |-
        The number of features in the feature collection.

        A server may omit this information in a response, if the information
        about the number of features is not known or difficult to compute.

        If the value is provided, the value shall be identical to the number
        of items in the "features" array.
      example: 10
    distance:
      maxItems: 2
      minItems: 1
      type: array
      description: A spatial OR (inclusive) a temporal distance each with their respective unit of measure.
      items:
        type: string
    relativePosition:
      uniqueItems: true
      type: array
      description: a RelativePosition enumeration as defined in W3C/OGC 16-071r3
      items:
        type: string
        enum:
        - Before
        - After
        - Meets
        - MetBy
        - Overlaps
        - OverlappedBy
        - Starts
        - StartedBy
        - During
        - Contains
        - Finishes
        - FinishedBy
        - Equals
        - In
        - Disjoint
    landingPage:
      allOf:
      - $ref: '#/components/schemas/landingPage_1'
      - $ref: '#/components/schemas/landingPage-link'
    landingPage_1:
      required:
      - links
      type: object
      properties:
        title:
          type: string
          example: Buildings in Bonn
        description:
          type: string
          example: Access to data about buildings in the city of Bonn via a Web API that conforms to the OGC API Features specification.
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
    landingPage-link:
      required:
      - links
      type: object
      properties:
        links:
          type: array
          example:
          - href: http://data.example.org/?f=json
            rel: self
            type: application/json
            title: This document
          - href: http://data.example.org/?f=html
            rel: alternate
            type: text/html
            title: This document in HTML
          - href: http://data.example.org/api?f=json
            rel: service-desc
            type: application/vnd.oai.openapi+json;version=3.0
            title: The API definition in OpenAPI 3.0 JSON
          - href: http://data.example.org/api?f=html
            rel: service-desc
            type: text/html
            title: The API definition in HTML
          - href: http://data.example.org/conformance?f=json
            rel: http://www.opengis.net/def/rel/ogc/1.0/conformance
            type: application/json
            title: Conformance classes implemented by this API
          - href: http://data.example.org/collections?f=json
            rel: http://www.opengis.net/def/rel/ogc/1.0/data
            type: application/json
            title: Collections in the dataset in JSON
          - href: http://data.example.org/collections?f=html
            rel: http://www.opengis.net/def/rel/ogc/1.0/data
            type: text/html
            title: Collections in the dataset in HTML
          items:
            $ref: '#/components/schemas/link'
    exception:
      required:
      - code
      type: object
      properties:
        code:
          type: string
        description:
          type: string
      description: 'Information about the exception: an error code plus an optional description.'
    confClasses:
      required:
      - conformsTo
      type: object
      properties:
        conformsTo:
          type: array
          items:
            type: string
    featureGeoJSON:
      required:
      - geometry
      - properties
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - Feature
        geometry:
          $ref: '#/components/schemas/geometryGeoJSON'
        properties:
          type: object
          nullable: true
        id:
          oneOf:
          - type: string
          - type: integer
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
    geometryGeoJSON:
      oneOf:
      - $ref: '#/components/schemas/pointGeoJSON'
      - $ref: '#/components/schemas/multipointGeoJSON'
      - $ref: '#/components/schemas/linestringGeoJSON'
      - $ref: '#/components/schemas/multilinestringGeoJSON'
      - $ref: '#/components/schemas/polygonGeoJSON'
      - $ref: '#/components/schemas/multipolygonGeoJSON'
      - $ref: '#/components/schemas/geometrycollectionGeoJSON'
    pointGeoJSON:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - Point
        coordinates:
          minItems: 2
          type: array
          items:
            type: number
    multipointGeoJSON:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - MultiPoint
        coordinates:
          type: array
          items:
            minItems: 2
            type: array
            items:
              type: number
    linestringGeoJSON:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - LineString
        coordinates:
          minItems: 2
          type: array
          items:
            minItems: 2
            type: array
            items:
              type: number
    multilinestringGeoJSON:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - MultiLineString
        coordinates:
          type: array
          items:
            minItems: 2
            type: array
            items:
              minItems: 2
              type: array
              items:
                type: number
    polygonGeoJSON:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - Polygon
        coordinates:
          type: array
          items:
            minItems: 4
            type: array
            items:
              minItems: 2
              type: array
              items:
                type: number
    multipolygonGeoJSON:
      required:
      - coordinates
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - MultiPolygon
        coordinates:
          type: array
          items:
            type: array
            items:
              minItems: 4
              type: array
              items:
                minItems: 2
                type: array
                items:
                  type: number
    geometrycollectionGeoJSON:
      required:
      - geometries
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - GeometryCollection
        geometries:
          type: array
          items:
            $ref: '#/components/schemas/geometryGeoJSON'
    trs:
      type: string
      description: |-
        Coordinate reference system of the coordinates in the temporal extent
        (property `interval`). The default reference system is the Gregorian calendar.
        In the Core this is the only supported temporal reference system.
        Extensions may support additional temporal reference systems and add
        additional enum values.
      default: http://www.opengis.net/def/uom/ISO-8601/0/Gregorian
      enum:
      - http://www.opengis.net/def/uom/ISO-8601/0/Gregorian
    dggsRsZoneClass_zoneExtent_zoneErrorBudget:
      type: object
      properties:
        spatialUnits:
          type: string
          description: Units to define the spatial error budget
        spatialErrorBudget:
          type: number
          description: Spatial Error Budget
        temporalUnits:
          type: string
          description: Units to define the temporal error budget
        temporalErrorBudget:
          type: number
          description: Temporal Error Budget
      description: the nominal spatial and/or temporal error budget of the DGGS Zones defined at a given refinement level of the selected DGGS.
    dggsRsZoneClass_zoneExtent:
      type: object
      properties:
        spatialUnits:
          type: string
          description: Units to define the spatial extent
        medianSpatialExtent:
          type: number
          description: Spatial Extent
        temporalUnits:
          type: string
          description: Units to define the temporal extent
        temporalExtent:
          type: number
          description: Temporal Extent
        zoneErrorBudget:
          $ref: '#/components/schemas/dggsRsZoneClass_zoneExtent_zoneErrorBudget'
      description: the nominal spatial and/or temporal extent of the DGGS Zones defined at a given refinement level of the selected DGGS
    dggsRsParameters_dggsRsDescription:
      required:
      - dggsRsId
      - source
      - title
      type: object
      properties:
        title:
          type: string
          description: Title of this DGGS_RS Instance
        dggsRsId:
          type: string
          description: Formal Identifier for this DGGS_RS Instance
        source:
          type: array
          description: source to the technical specification of this family of DGGS
          items:
            type: string
            format: uri
      description: Informative description of the selected DGGS_RS and cananonical source.
      example: '{"title":"TestBed 16 Implementation of the rHealPix DGGS","dggsRsId":"TB16-Pix","source":["DOI:10.1088/1755-1315/34/1/012012"]}'
    dggsRsParameters_dggsRsStructure_zoneGeometry:
      type: object
      properties:
        spatialDimension:
          type: number
          description: Topological dimension of the spatial geometry component of zones defined by this DGGS.
        temporalDimension:
          type: number
          description: Topological dimension of the temporal geometry component of zones defined by this DGGS (if present).
        topologicalDimension:
          type: number
          description: Sum of dimensions of topological primitives of zones defined by this DGGS.
      description: ZoneGeometry is either a primitive of ZoneSingleGeometry or a compound of two ZoneSingleGeometry primitives — one spatial and one temporal. Zones exhibit topology of the same spatio-temporal dimension as their geometry.
    dggsRsParameters_dggsRsStructure:
      required:
      - gridConstraint
      - refinementRatio
      - refinementStrategy
      - surfaceInterpolation
      - zoneGeometry
      type: object
      properties:
        gridConstraint:
          type: array
          description: the type/class of DGGS the selected DGGS is. This is defined in OGC Topic 21 v2.0 [OGC 20-040r3] by the DGG_GridConstraint CodeList.
          items:
            type: string
            enum:
            - cellAxisAligned
            - cellConformal
            - cellEquiAngular
            - cellEquiDistant
            - cellEqualSized
        zoneGeometry:
          $ref: '#/components/schemas/dggsRsParameters_dggsRsStructure_zoneGeometry'
        surfaceInterpolation:
          type: array
          description: "Surface Interpolation used to defined zones of this DGGS.\n- *spherical* -- The Cell surface is a section of a spherical surface. NOTE For Cells of sufficiently small extent, linear interpolation is sufficient to meet the Cell.errorBudget for area.  \n- *elliptical* -- The Cell surface is a section of an elliptical surface. NOTE for Cells of sufficiently small extent, spherical interpolation is sufficient to meet the Cell.errorBudget for area. NOTE for Cells of sufficiently small extent, linear interpolation is sufficient to meet the Cell.errorBudget for area."
          items:
            oneOf:
            - type: string
              enum:
              - spherical
              - elliptical
        referenceSystemType:
          type: string
          description: |-
            "## *Not Yet Implemented*
            must include all of these elements [MDRS - Metadata Reference System, CRS - Coordinate Reference System Metadata, ZIRS - Zone Identifier Reference System, GLOBE - Geometry Specification] - need to engage with OGC API Records SWG to determine key mappings for each of these identifiers. Need to engage with ISO/TC211 Infrastructure group to determine the status of the ISO19112 Glossary implimentations."
        refinementStrategy:
          type: array
          description: "CodeList for strategies that are used to define different categories of DGGS. Each strategy defines the topological relationship of one or more elements of cell geometry belonging to a child cell with one or more elements of geometry of its parent cell. Options include\n\n  - *centredChildCell* -- Each parent cell shares a cell←zone.representativePosition with one of its child cells.\n  \n  - *nestedChildCell* -- The boundary of the set of child cells for a parent is identical to the parent’s boundary.\n  \n  - *nodeCentredChildCell* -- Each parent cell has a child⇐zone.representativePosition coincident with each of the parent’s nodes (zero-Dimensional topological boundary element).\n  \n  - *edgeCentredChildCell* -- Each parent cell of dimension greater than 1 has a child cell for which the cell⇐zone.representativePosition lies on each of the parent’s edges (one-Dimensional topological boundary element)\n  \n  - *faceCentredChildCell* -- Each parent cell of dimension greater than 2 has a child cell for which the cell⇐zone.representativePosition lies on each of the parent’s faces (two-Dimensional topological boundary element)\n  \n  - *solidCentredChildCell* -- Each parent cell of dimension greater than 3 has a child cell for which the cell⇐zone.representativePosition lies on each of the parent’s solids (three-Dimensional topological boundary element)"
          items:
            type: string
            enum:
            - centredChildCell
            - nestedChildCell
            - nodeCentredChildCell
            - edgeCentredChildCell
            - faceCentredChildCell
            - solidCentredChildCell
        refinementRatio:
          type: number
          description: Ratio of the number of child zones for every parent zone in the DGGS hierarchy. This is expressed as a single number representing the number of child zones to eath parent zone.
      description: Key elements used to describe the structure of the selected DGGS
      example: '{"gridConstraint":["cellEqualSized"],"surfaceInterpolation":"elliptical","zoneGeometry":{"spatialDimension":2,"temporalDimension":0,"topologicalDimension":2},"refinementStrategy":["nestedChildCell","centredChildCell"],"refinementRatio":9}'
  responses:
    ConformanceDeclaration:
      description: |-
        The URIs of all conformance classes supported by the server.

        To support "generic" clients that want to access multiple
        OGC API implementations - and not "just" a specific
        API / server, the server declares the conformance
        classes it implements and conforms to.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/confClasses'
          example:
            conformsTo:
            - http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/core
            - http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30
            - http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/html
            - http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson
        text/html:
          schema:
            type: string
    NotSupported:
      description: None of the requested media types is supported at the path.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
        text/html:
          schema:
            type: string
    DGGSDescription:
      description: |-
        Describes a particular DGGS

        This information includes:

        * A local identifier for the DGGS that is unique for this API;
        * An optional human readable title and description for the DGGS;
        * The predominant zone shape (rectangular, triangular, hexagonal)
        * The list of resolutions for the particular DGGS
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/collections'
          example:
            id: TB16-Pix
            title: Testbed 16 DGGS reference system based on rHealPix
            description: A rHealPix instance based on WGS84, rotated so that all the corners of the cube lie in water
            resolutions:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            links:
            - href: https://iopscience.iop.org/article/10.1088/1755-1315/34/1/012012/pdf
              rel: describedBy
              type: application/PDF
              title: The rHealPix DGGS specification
        text/html:
          schema:
            type: string
    DGGSList:
      description: |-
        The list of DGGS available and link to the processes

        The response contains the list of DGGS objects.
        This information includes:

        * A local identifier for the DGGS that is unique for this API;
        * An optional human readable title and description for the DGGS;
        * The predominant zone shape (rectangular, triangular, hexagonal)
        * The list of resolutions for the particular DGGS
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/collection-list'
          example:
            links:
            - href: http://data.example.org/dggs.json
              rel: self
              type: application/json
              title: this document
            - href: http://data.example.org/dggs.html
              rel: alternate
              type: text/html
              title: this document as HTML
            dggs-list:
            - id: TB16-Pix
              title: The Testbed16 DGGS based on rHealPix
              description: The rHealPix DGGS
              resolutions:
              - 0
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 7
              - 8
              - 9
              - 10
              - 11
              - 12
              - 13
              - 14
              links:
              - href: https://iopscience.iop.org/article/10.1088/1755-1315/34/1/012012/pdf
                rel: describedBy
                type: application/PDF
                title: The rHealPix DGGS specification
              - href: http://data.example.org/dggs/rHealPix/zones
                rel: zones
                type: appplication/json
            - id: H3
              title: H3
              description: The H3 DGGS
              resolutions:
              - 0
              - 1
              - 2
              - 3
              - 4
              - 5
              - 6
              - 7
              - 8
              - 9
              - 10
              - 11
              - 12
              - 13
              - 14
              - 15
              - 16
              links:
              - href: https://eng.uber.com/h3/
                rel: describedBy
                type: text/html
                title: The H3 specification
              - href: http://data.example.org/dggs/H3/zones
                rel: zones
                type: appplication/json
        text/html:
          schema:
            type: string
    Distance:
      description: |-
        The Distance of one ZoneId to another in a projectTo dimension

        The response contains a spatial and a temporal distance with their respective uom.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/distance'
    RelativePosition:
      description: |-
        The relativePosition of one ZoneId to another in a projectTo dimension

        The response contains a member of the relativePosition enumerated schema.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/relativePosition'
    ZoneList:
      description: |-
        A list of DGGS zones.

        The response contains a list of DGGS zones. The response can be a GeoJSON payload with full boundaries, for traditional clients, or
        a simple list of zone ids, for DGGS aware clients
      content:
        application/geo+json:
          schema:
            $ref: '#/components/schemas/zoneCollectionGeoJSON'
          example:
          - type: FeatureCollection
            features:
            - type: Feature
              id: P4
              geometry:
                type: Polygon
                coordinates:
                - '...'
              properties:
                resolution: 0
                center:
                  type: Point
                  coordinates:
                  - 0
                  - 0
            - type: Feature
              id: Q4
              geometry:
                type: Polygon
                coordinates:
                - '...'
              properties:
                resolution: 0
                center:
                  type: Point
                  coordinates:
                  - 0
                  - 0
        application/dggs+json:
          schema:
            $ref: '#/components/schemas/zoneCollectionDGGSJSON'
          example:
          - type: FeatureCollection
            features:
            - type: Feature
              id: P4
              geometry:
              - P4
            - type: Feature
              id: Q4
              geometry:
              - Q4
              properties:
                myAttribute: 3
                otherAttribute: abc
            - type: Feature
              id: myFeature.1
              geometry:
              - Q4
              - P4
              - P32
              properties:
                myAttribute: 3
                otherAttribute: abc
        application/zoneids+json:
          schema:
            $ref: '#/components/schemas/zoneList'
          example:
          - zones:
            - O
            - P
            - Q
            - R
            links:
            - href: http://data.example.org/dggs/rHeadPix/zones?bbox=-20,-40,20,40&startIndex=1000
              rel: next
              type: application/json
              title: the next page of
        text/html:
          schema:
            type: string
    Zone:
      description: |-
        A single DGGS zone

        The response contains the description of a single DGGS zone
      content:
        application/geo+json:
          schema:
            $ref: '#/components/schemas/zoneGeoJSON'
          example:
            type: Feature
            id: P4
            geometry:
              type: Polygon
              coordinates:
              - '...'
            resolution: 0
            properties:
              att1: value1
              att2: value2
        application/dggs+json:
          schema:
            $ref: '#/components/schemas/DGGSJSON'
          example:
            type: Feature
            id: P4
            geometry:
            - P4
            properties:
              att1: value1
              att2: value2
        text/html:
          schema:
            type: string
    BooleanResponse:
      description: A single boolean type response
      content:
        application/json:
          schema:
            type: boolean
          example:
            result: true
        text/html:
          schema:
            type: boolean
  parameters:
    path-collectionId:
      name: collectionId
      in: path
      description: local identifier of a collection
      required: true
      style: simple
      explode: false
      schema:
        type: string
    path-dggsRSID:
      name: dggsRSID
      in: path
      description: DGGS implementation identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
    path-ZonalID:
      name: ZonalID
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
        example: Q3
    query-f:
      name: f
      in: query
      description: The optional f parameter indicates the output format which the server shall provide as part of the response document.  The default format is JSON.
      required: false
      style: form
      explode: true
      schema:
        type: string
        example: json
        enum:
        - json
        - html
    query-geometryStats:
      name: geometryStats
      in: query
      description: get full DGGS_RS class statistics e.g. [min,max,mean,median,sd]
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
      example: min,max,median
    query-bbox:
      name: bbox
      in: query
      description: |-
        Only features that have a geometry that intersects the bounding box are selected.
            The bounding box is provided as four or six numbers, depending on
        whether the
            coordinate reference system includes a vertical axis (height or depth):

        * Lower left corner, coordinate axis 1
            * Lower left corner, coordinate axis 2
            * Minimum value, coordinate axis 3 (optional)
            * Upper right corner, coordinate axis 1
            * Upper right corner, coordinate axis 2
            * Maximum value, coordinate axis 3 (optional)

        The coordinate reference system of the values is WGS 84 longitude/latitude
            (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different
        coordinate
            reference system is specified in the parameter `bbox-crs`.

        For WGS 84 longitude/latitude the values are in most cases the sequence of
            minimum longitude, minimum latitude, maximum longitude and maximum
        latitude.
            However, in cases where the box spans the antimeridian the first value
            (west-most box edge) is larger than the third value (east-most box
        edge).
        If the vertical axis is included, the third and the sixth number are
            the bottom and the top of the 3-dimensional bounding box.

        If a feature has multiple spatial geometry properties, it is the decision of the
            server whether only a single spatial geometry property is used to
        determine
            the extent or all relevant geometries.
      required: false
      style: form
      explode: false
      schema:
        maxItems: 6
        minItems: 4
        type: array
        items:
          type: number
    query-offset:
      name: offset
      in: query
      description: |-
        The optional offset parameter specifies the number of items of a collection to skip before constructing the resultset to be returned in the response document.
        Minimum = 0, Maximum = 9999, Default = 10
      required: false
      style: form
      explode: true
      schema:
        maximum: 9999
        minimum: 0
        type: integer
        default: 10
    query-limit:
      name: limit
      in: query
      description: |-
        The optional limit parameter limits the number of items that are presented in the response document.
        Only items are counted that are on the first level of the collection in the response document.
            Nested objects contained within the explicitly requested items shall not
        be counted.
        Minimum = 1. Maximum = 10000. Default = 10.
      required: false
      style: form
      explode: true
      schema:
        maximum: 10000
        minimum: 1
        type: integer
        default: 10
    query-refinementLevel:
      name: refinementLevel
      in: query
      required: true
      style: form
      explode: true
      schema:
        type: number
    query-resolution:
      name: resolution
      in: query
      required: true
      style: form
      explode: true
      schema:
        type: number
    query-zoneIdList:
      name: zoneIdList
      in: query
      description: Comma separated list of zone identifiers
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
    query-another:
      name: ZonalID
      in: query
      description: type ZonalIdentifier, mandatory. Specifies the target region for the query. In zonal query a zone’s identifier provides sufficient description of its topology. ZonalIdentifier therefore takes the place of the geometry data used in Query2D and Query3D for both the source and the target.
      required: true
      style: form
      explode: true
      schema:
        type: string
        example: R4
    query-dist:
      name: dist
      in: query
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/distance'
    query-inheritId:
      name: inheritId
      in: query
      description: type Boolean, optional, default ⇐ False When inheritID has a value of True the result «set» only contains cells for which the IDs have shared inheritance, and a value of False indicates that inheritance is ignored.
      required: false
      style: form
      explode: true
      schema:
        type: boolean
        default: false
    query-levels:
      name: levels
      in: query
      description: type Integer, optional, default ⇐ 1 Levels indicates the relative number of levels in the hierarchy to be traversed in assembling the result «set» Figure 15 illustrates the parent, child and sibling suite of functions through examples.
      required: false
      style: form
      explode: true
      schema:
        type: integer
        default: 1
    query-matrix:
      name: matrix
      in: query
      required: false
      style: form
      explode: true
      schema:
        maxItems: 9
        minItems: 9
        type: array
        items:
          type: string
    query-projectTo:
      name: projectTo
      in: query
      description: projectTo specifies an optional reference direction, surface or volume for an operation. Allowed values for each direction are 0 and 1, and spatial directions may also have a value of n. projectTo defines a vector whose starting point is inferred as the point with each projectTo direction whose value is 1 set to 0. It takes one of three forms. In its one-dimensional form for specifying a reference direction, one direction has a value of 1. For example (0,0,0,1) projects to the temporal axis, and (0,0,1,0) projects to the vertical axis. In its two-dimensional form for specifying a reference surface, two directions have a value of 1. For example a surface at height n is specified by a projectTo value of (1,1,n,0) representing the vector [ (0,0,n,0), (1,1,n,0) ]. In its three-dimensional form for specifying a reference volume, three directions have a value of 1. For example (1,1,1,0) projects to a spatial volume without reference to time, and (1,1,n,1) projects to a surface spanning all time at height n. Only the one-D\dimensional form is supported by relativePosition and relatePosition. While this construct could be used to implement more complex spatio-temporal queries, that isn’t the intent of Query2D, and isn’t specified for ZoneQuery either.
      required: false
      style: form
      explode: true
      schema:
        maxItems: 4
        minItems: 4
        type: array
        items:
          type: string
    query-rangeRefine:
      name: rangeRefine
      in: query
      description: Specifies the range of refinement levels to include in the return «set». The lower and upper bounds in the refinementLevelRange datatype are both included in the range.
      required: false
      style: form
      explode: false
      schema:
        maxItems: 2
        minItems: 2
        type: array
        items:
          type: integer
      example: rangeRefine=0,5
    query-relate:
      name: relate
      in: query
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/relativePosition'
    query-distance:
      name: distance
      in: query
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/distance'
